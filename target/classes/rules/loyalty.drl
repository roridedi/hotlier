package com.marriott.loyalty;
 
import java.util.ArrayList;
import java.util.List;
import com.marriott.loyatly.Booking;
import com.marriott.loyatly.HotelAmenity;

//Any kids > “Family travel” + “Free breakfast” + “Pool”
rule "Booking Has Kids"
    when
       booking : Booking ( numOfKids >= 1, numOfKids: numOfKids )
    then
        System.out.println( "Booking has "+ numOfKids + " kids" );
        List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
       	amenities.add(HotelAmenity.FAMILY_TRAVEL);
        amenities.add(HotelAmenity.FREE_BREAKFAST);
        amenities.add(HotelAmenity.POOL);
        booking.setHotelAmenity(amenities);
		update( booking );
		System.out.println("Booking has amenity type of " + amenities.toString()  );
end

//Single traveler + corp code (IBM) > “Business Center” + “Free high speed Internet”+ “Restaurant on-site”
rule "Single IBM Traveler"

    when
       booking : Booking ( corpCode =="IBM" ,numOfKids==0, numOfAdults==1, adults:numOfAdults)
    then
    	System.out.println("Booking has a single IBM traveler");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.BUSINESS_CENTER);
        amenities.add(HotelAmenity.FREE_HIGH_SPEED_INTERNET);
        amenities.add(HotelAmenity.RESTAURANT_ON_SITE);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end

//Stays longer than 7 days > “Kitchen/kitchenette” + “Extended stay”
rule "Stay longer than 7 days"
    when
       booking : Booking ( bookingDuration >7)
    then
    	System.out.println("Booking greater than 7 days");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.KITCHEN_KITCHENETTE);
        amenities.add(HotelAmenity.EXTENDED_STAY);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//Any airport hotel (ATLAP, ATLNE, ATLSA, ATLFW, ATLLM, ATLWI) > “Airport shuttle”
rule "Airport Shuttle"
    when
		booking : Booking( hotelCode in ("ATLAP", "ATLNE", "ATLSA", "ATLFW", "ATLLM", "ATLWI"))  
    then
    	System.out.println("Booking greater than 7 days");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.AIRPORT_SHUTTLE);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//Airport codes (DEN or SFO or ATL or BTV) > "Car rental desk"
rule "Car Rental Desk"
    when
		booking : Booking( airportCode in ("DEN", "SFO", "ATL","BTV"))  
    then
    	System.out.println("Booking greater than 7 days");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.AIRPORT_SHUTTLE);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//Miami, FL > "Beach" + "Airport shuttle"
rule "Miami Hotel"
    when
       booking : Booking ( city=="MIAMI",state =="FL", numOfKids==0)
    then
    	System.out.println("Booking is in Miami");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.BEACH);
        amenities.add(HotelAmenity.AIRPORT_SHUTTLE);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//Miami, FL + 2 kids > "Beach" + "Pool" + "Airport shuttle"
rule "Miami Hotel With Kids"
    when
       booking : Booking ( city=="MIAMI",state =="FL", numOfKids==2)
    then
    	System.out.println("Booking is in Miami with 2 kids");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.BEACH);
        amenities.add(HotelAmenity.AIRPORT_SHUTTLE);
        amenities.add(HotelAmenity.POOL);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//Orlando, FL > "Family travel"
rule "Family Travel"
    when
       booking : Booking ( city=="ORLANDO",state =="FL")
    then
    	System.out.println("Booking is in orlando");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.FAMILY_TRAVEL);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//Augusta, GA > "Golf" + "Pets welcome"
rule "The Masters"
    when
       booking : Booking ( city=="AUGUSTA",state =="GA")
    then
    	System.out.println("Booking is in Augusta GA");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.GOLF);
        amenities.add(HotelAmenity.PETS_WELCOME);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//New York, NY > "Parking" + “Airport shuttle”
rule "NYC"
    when
       booking : Booking ( city=="NEW YORK",state =="NY")
    then
    	System.out.println("Booking is in New York");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.PARKING);
        amenities.add(HotelAmenity.AIRPORT_SHUTTLE);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end
//Cancun, MX >> "Resort" + "Pool" + "Airport shuttle"
rule "Cancun"
    when
       booking : Booking ( city=="CANCUN",state =="MX")
    then
    	System.out.println("Booking is in Cancun");
    	List<HotelAmenity> amenities = new ArrayList<HotelAmenity>();
        amenities.add(HotelAmenity.RESORT);
        amenities.add(HotelAmenity.POOL);
        amenities.add(HotelAmenity.AIRPORT_SHUTTLE);
        booking.setHotelAmenity(amenities);
	update( booking );
		System.out.println("Booking has amenity type of " + booking.getHotelAmenity() );
end